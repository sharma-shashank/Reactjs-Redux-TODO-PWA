{"version":3,"sources":["redux/actions.js","components/TodoInput.jsx","components/TodoItem.jsx","components/TodoList.jsx","App.js","redux/states.js","redux/store.js","redux/reducers.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","TodoInput","useState","name","setName","dispatch","useDispatch","className","value","onChange","e","target","type","onClick","todo","id","uuid","payload","TodoItem","editable","setEditable","length","updateTodo","todoId","TodoList","todos","useSelector","state","console","log","map","i","App","store","createStore","newTodos","action","push","filter","index","findIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAaA,EAAW,WACXC,EAAc,cACdC,EAAc,c,0BC+BZC,MA5Bf,WAAsB,IAAD,EACKC,mBAAS,IADd,mBACZC,EADY,KACNC,EADM,KAEbC,EAAWC,cAWf,OACI,8BACI,sBAAKC,UAAU,UAAf,UACI,uBACAC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAKN,EAAQM,EAAEC,OAAOH,QAChCI,KAAK,OAAOL,UAAU,qBACtB,wBACAM,QAjBK,WDLd,IAAiBC,ECMZX,GACAE,GDPYS,ECOO,CACfC,GAAIC,cACJb,KAAMA,GDRX,CACHS,KAAKd,EACLmB,QAASH,KCQTV,EAAQ,KAYAG,UAAU,uBAFV,uB,QCsBDW,MA3Cf,YAA6B,IAATJ,EAAQ,EAARA,KAAQ,EACQZ,oBAAS,GADjB,mBACjBiB,EADiB,KACPC,EADO,OAEAlB,mBAASY,EAAKX,MAFd,mBAEjBA,EAFiB,KAEXC,EAFW,KAGpBC,EAAWC,cAaf,OACI,8BACI,sBAAKC,UAAU,8BAAf,UACI,oCAAOO,EAAKC,GAAGM,OAAS,EAAIP,EAAKC,GAAG,GAAKD,EAAKC,MAC9C,qBAAKR,UAAU,MAAf,SACKY,EACG,uBAAOP,KAAK,OAAOL,UAAU,eACzBC,MAAOL,EACPM,SAAU,SAACC,GACPN,EAAQM,EAAEC,OAAOH,UAKzB,6BAAKM,EAAKX,SAElB,wBAAQI,UAAU,sBACdM,QA5BI,WAChBT,EAAQU,EAAKX,MACbE,EFQD,SAAoBS,GACvB,MAAO,CACHF,KAAKZ,EACLiB,QAASH,GEXAQ,CAAW,2BACbR,GADY,IAEfX,KAAMA,MAEViB,GAAaD,IAqBL,SAEEA,EAAW,SAAW,SACxB,wBAAQZ,UAAU,qBACdM,QAtBI,kBAAMR,GFPHkB,EEOuBT,EAAKC,GFN5C,CACHH,KAAKb,EACLkB,QAASM,KAHV,IAAoBA,GE4BX,0BCvBDC,MAZf,WACI,IAAIC,EAAQC,aAAY,SAAAC,GAAK,OAAEA,KAE/B,OADAC,QAAQC,IAAI,YAAaJ,GAErB,qBAAKlB,UAAU,OAAf,SACKkB,EAAMK,KAAI,SAAChB,EAAMiB,GACd,OAAO,cAAC,EAAD,CAAkBjB,KAAMA,GAATiB,S,MCIvBC,MATf,WACE,OACE,sBAAKzB,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,Q,cCTKkB,EAAQ,CACf,CACIV,GAAG,EACHZ,KAAM,OAEV,CACIY,GAAG,EACHZ,KAAM,OAEV,CACIY,GAAG,EACHZ,KAAM,UCRH8B,EAAQC,aCCE,WAA4B,IACzCC,EADcR,EAA0B,uDAAlBF,EAAOW,EAAW,uCAE5C,OAAQA,EAAOxB,MACX,KAAKd,EAGD,OAFAqC,EAAQ,YAAOR,IACNU,KAAKD,EAAOnB,SACdkB,EACX,KAAKpC,EAGD,OADAoC,GADAA,EAAQ,YAAOR,IACKW,QAAO,SAAAxB,GAAI,OAAIA,EAAKC,IAAMqB,EAAOnB,WAEzD,KAAKjB,EAED,IAAMuC,GADNJ,EAAQ,YAAOR,IACQa,WAAU,qBAAGzB,KAAgBqB,EAAOnB,QAAQF,MASnE,IAAc,GAAVwB,EAEA,OADAJ,EAASI,GAASH,EAAOnB,QAClBkB,EAInB,OAAOR,KCzBXc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFW,SAASC,eAAe,W","file":"static/js/main.ab10bcff.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const UPDATE_TODO = \"UPDATE_TODO\";\n\nexport function addTodo(todo) {\n    return {\n        type:ADD_TODO,\n        payload: todo,\n    }\n}\n\nexport function deleteTodo(todoId) {\n    return {\n        type:DELETE_TODO,\n        payload: todoId,\n    }\n}\n\n\nexport function updateTodo(todo) {\n    return {\n        type:UPDATE_TODO,\n        payload: todo,\n    }\n}","import React, { useState } from 'react';\nimport { addTodo } from '../redux/actions';\nimport {v1 as uuid} from 'uuid';\nimport { useDispatch } from 'react-redux';\n\nfunction TodoInput() {\n    let [name, setName] = useState('');\n    let dispatch = useDispatch();\n\n    const addTodos = () => {\n        if (name)\n            dispatch(  addTodo({\n                id: uuid(),\n                name: name\n            }));\n        setName('');\n    }\n\n    return (\n        <div>\n            <div className=\"row m-2\">\n                <input\n                value={name}\n                onChange={(e)=>setName(e.target.value)}\n                type=\"text\" className=\"col form-control\"/>\n                <button\n                onClick={addTodos}\n                className=\"btn btn-primary mx-2\">Add</button>\n            </div>\n        </div>\n    )\n}\n\nexport default TodoInput\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { deleteTodo, updateTodo } from '../redux/actions';\n\nfunction TodoItem({ todo }) {\n    const [editable, setEditable] = useState(false)\n    const [name, setName] = useState(todo.name)\n    let dispatch = useDispatch();\n\n    const updateTodos = () => {\n        setName(todo.name);\n        dispatch(updateTodo({\n            ...todo,\n            name: name\n        }));\n        setEditable(!editable);\n    }\n\n    const deleteTodos = () => dispatch(deleteTodo(todo.id));\n\n    return (\n        <div>\n            <div className=\"row mx-2 align-items-center\">\n                <div>#{todo.id.length > 1 ? todo.id[2] : todo.id}</div>\n                <div className=\"col\">\n                    {editable ?\n                        <input type=\"text\" className=\"form-control\"\n                            value={name}\n                            onChange={(e) => {\n                                setName(e.target.value);\n                            }}\n\n                        />\n                        :\n                        <h4>{todo.name}</h4>}\n                </div>\n                <button className=\"btn btn-primary m-2\"\n                    onClick={updateTodos}\n                >{editable ? \"Update\" : \"Edit\"}</button>\n                <button className=\"btn btn-danger m-2\"\n                    onClick={deleteTodos}\n                >Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default TodoItem\n","import React from 'react'\nimport TodoItem from './TodoItem'\nimport { useSelector } from 'react-redux'\n\nfunction TodoList() {\n    let todos = useSelector(state=>state);\n    console.log('todo --- ', todos);\n    return (\n        <div className=\"my-4\">\n            {todos.map((todo, i)=>   {\n                return <TodoItem key={i} todo={todo}/>;\n            })}\n        </div>\n    )\n}\n\nexport default TodoList\n","import './App.css';\nimport TodoInput from './components/TodoInput';\nimport TodoList from './components/TodoList';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"App m-5\">\n      <TodoInput/>\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","export let todos = [\n    {\n        id:1,\n        name: \"One\",\n    },\n    {\n        id:2,\n        name: \"Two\",\n    },\n    {\n        id:3,\n        name: \"Three\",\n    },\n]","import {createStore} from 'redux';\nimport {reducer} from './reducers';\n\nexport let store = createStore(reducer);","import { ADD_TODO, UPDATE_TODO, DELETE_TODO } from './actions';\nimport { todos } from './states';\n\n\nexport let reducer = (state = todos, action) => {\n    let newTodos;\n    switch (action.type) {\n        case ADD_TODO:\n            newTodos = [...state];\n            newTodos.push(action.payload);\n            return newTodos;\n        case DELETE_TODO:\n            newTodos = [...state];\n            newTodos = newTodos.filter(todo => todo.id != action.payload);\n            return newTodos;\n        case UPDATE_TODO:\n            newTodos = [...state];\n            const index = newTodos.findIndex(({ id }) => id === action.payload.id);\n            // let index = -1;\n            // for (let i = 0; i < newTodos.length; i++) {\n            //     index++;\n            //     if (newTodos[i].id == action.payload.id) {\n            //         break;\n            //     }\n\n            // }\n            if (index != -1) {\n                newTodos[index] = action.payload;\n                return newTodos;\n            }\n\n    }\n    return state;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}